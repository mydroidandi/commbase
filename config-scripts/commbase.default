#!/bin/env bash
# Copyright (c) 2022-present Esteban Herrera
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to
# deal in the Software without restriction, including without limitation the
# rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
# sell copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
# IN THE SOFTWARE.

# commbase
# Starts, stops, teleports, and executes terminal versions of the Commbase
# voice commands.
# Runs the tmux user interface file ui.sh.
#
# To start the application:
# $ commbase start
# Or run it like this:
# $ ./commbase start
# 
# To run Commbase commands:
# $ commbase 'tell me about yourself'
# Or replace single quotes by double quotes in the parameter.
#
# The command options start, teleport, stop, *), and else don't output logs in
# the pane 1 of the tmux session. The other output in their respective functions,
# otherwise, in their correspondent scripts.

# The data processing file.
COMMBASE_PROCESS_FILE="$COMMBASE/commbase/core/data-processing.sh"

# The only Commbase tmux session.
SESSIONNAME="Commbase-0"

case "$1" in

  'start' | 'teleport')
    if (tmux has-session -t "$SESSIONNAME" 2> /dev/null); then
      echo "Session '$SESSIONNAME' exists."
      tmux attach-session -t Commbase-0
    else
      echo "Starting application"
      cd $COMMBASE/commbase/core
      (bash ui.sh) &> /dev/null
    fi
    ;;
esac

# All the Commbase commands can be added to the next case after the signal cases
# programmed in the section "Signals" of the file data-processing.sh, such as the
# case 'okay stop'.
# Follow the same order used in the section "Skills" of the file data-processing.sh
# to keep the cases organized so they can be found easily.
# Try not to add more than two aliases to every case option. Remember that Commbase
# is primarily a conversational assistant, not a terminal command.

if (tmux has-session -t "$SESSIONNAME" 2> /dev/null); then
  echo "Session '$SESSIONNAME' exists."

  case "$1" in

    'stop')
      echo "Stopping application"
      tmux kill-session -t Commbase-0
      ;;
    'okay stop' | 'ok stop')
      cd $COMMBASE/commbase/data
      echo "okay stop" | tee .data.dat > /dev/null
      (bash $COMMBASE_PROCESS_FILE) &> /dev/null
      ;;
    'tell me about yourself' | 'introduce yourself')
      cd $COMMBASE/commbase/data
      echo "tell me about yourself" | tee .data.dat .prev_data.dat > /dev/null
      (bash $COMMBASE_PROCESS_FILE) &> /dev/null
      ;;
    'stop capturing sound' | 'stop listening')
      cd $COMMBASE/commbase/data
      echo "stop capturing sound" | tee .data.dat .prev_data.dat > /dev/null
      (bash $COMMBASE_PROCESS_FILE) &> /dev/null
      ;;
    'reload recognition' | 'reload speech recognition')
      cd $COMMBASE/commbase/data
      echo "reload recognition" | tee .data.dat .prev_data.dat > /dev/null
      (bash $COMMBASE_PROCESS_FILE) &> /dev/null &> /dev/null
      ;;
    'disconnect yourself')
      cd $COMMBASE/commbase/data
      echo "disconnect yourself" | tee .data.dat .prev_data.dat > /dev/null
      (bash $COMMBASE_PROCESS_FILE) &> /dev/null
      ;;
    'wake up' | 'wake-up')
      cd $COMMBASE/commbase/data
      echo "wake up" | tee  .data.dat .prev_data.dat > /dev/null
      (bash $COMMBASE_PROCESS_FILE) &> /dev/null
      ;;
    'update applications')
      cd $COMMBASE/commbase/data
      echo "update applications" | tee .data.dat .prev_data.dat > /dev/null
      (bash $COMMBASE_PROCESS_FILE) &> /dev/null
      ;;
    'open the brave browser')
      cd $COMMBASE/commbase/data
      echo "open the brave browser" | tee .data.dat .prev_data.dat > /dev/null
      (bash $COMMBASE_PROCESS_FILE) &> /dev/null
      ;;
    'open my linux documentation')
      cd $COMMBASE/commbase/data
      echo "open my linux documentation" | tee .data.dat .prev_data.dat > /dev/null
      (bash $COMMBASE_PROCESS_FILE) &> /dev/null
      ;;
    'show me my location')
      cd $COMMBASE/commbase/data
      echo "show me my location" | tee .data.dat .prev_data.dat > /dev/null
      (bash $COMMBASE_PROCESS_FILE) &> /dev/null
      ;;
    'open the network browser')
      cd $COMMBASE/commbase/data
      echo "open the network browser" | tee .data.dat .prev_data.dat > /dev/null
      (bash $COMMBASE_PROCESS_FILE) &> /dev/null
      ;;
    'g i t status')
      cd $COMMBASE/commbase/data
      echo "g i t status" | tee .data.dat .prev_data.dat > /dev/null
      (bash $COMMBASE_PROCESS_FILE) &> /dev/null
      ;;
    'open a new terminal')
      cd $COMMBASE/commbase/data
      echo "open a new terminal" | tee .data.dat .prev_data.dat > /dev/null
      (bash $COMMBASE_PROCESS_FILE) &> /dev/null
      ;;
    'open a simple browser' | 'open the simple browser')
      cd $COMMBASE/commbase/data
      echo "open a simple browser" | tee .data.dat .prev_data.dat > /dev/null
      (bash $COMMBASE_PROCESS_FILE) &> /dev/null
      ;;
    'kill the simple browser' | 'close the simple browser')
      cd $COMMBASE/commbase/data
      echo "kill the simple browser" | tee .data.dat .prev_data.dat > /dev/null
      (bash $COMMBASE_PROCESS_FILE) &> /dev/null
      ;;
    'reproduce a chapter of robinson crusoe' | 'reproduce robinson crusoe')
      cd $COMMBASE/commbase/data
      echo "reproduce a chapter of robinson crusoe" | tee .data.dat .prev_data.dat > /dev/null
      (bash $COMMBASE_PROCESS_FILE) &> /dev/null
      ;;
    'open the terminal editor')
      cd $COMMBASE/commbase/data
      echo "open the terminal editor" | tee .data.dat .prev_data.dat > /dev/null
      (bash $COMMBASE_PROCESS_FILE) &> /dev/null
      ;;
    'show me basic system information')
      cd $COMMBASE/commbase/data
      echo "show me basic system information" | tee .data.dat .prev_data.dat > /dev/null
      (bash $COMMBASE_PROCESS_FILE) &> /dev/null
      ;;
    'connect me to the development server')
      cd $COMMBASE/commbase/data
      echo "connect me to the development server" | tee .data.dat .prev_data.dat > /dev/null
      (bash $COMMBASE_PROCESS_FILE) &> /dev/null
      ;;
    'let me know when the internet is back' | 'tell me when the internet is back')
      cd $COMMBASE/commbase/data
      echo "let me know when the internet is back" | tee .data.dat .prev_data.dat > /dev/null
      (bash $COMMBASE_PROCESS_FILE) &> /dev/null
      ;;
    'list the addresses in the local network')
      cd $COMMBASE/commbase/data
      echo "list the addresses in the local network" | tee .data.dat .prev_data.dat > /dev/null
      (bash $COMMBASE_PROCESS_FILE) &> /dev/null
      ;;
    'verify the internet connection')
      cd $COMMBASE/commbase/data
      echo "verify the internet connection" | tee .data.dat .prev_data.dat > /dev/null
      (bash $COMMBASE_PROCESS_FILE) &> /dev/null
      ;;
    'connect me to the private network')
      cd $COMMBASE/commbase/data
      echo "connect me to the private network" | tee .data.dat .prev_data.dat > /dev/null
      (bash $COMMBASE_PROCESS_FILE) &> /dev/null
      ;;
    'disconnect me from the private network')
      cd $COMMBASE/commbase/data
      echo "disconnect me from the private network" | tee .data.dat .prev_data.dat > /dev/null
      (bash $COMMBASE_PROCESS_FILE) &> /dev/null
      ;;
    'push to the local web server')
      cd $COMMBASE/commbase/data
      echo "push to the local web server" | tee .data.dat .prev_data.dat > /dev/null
      (bash $COMMBASE_PROCESS_FILE) &> /dev/null
      ;;
    'synchronize development from desktop')
      cd $COMMBASE/commbase/data
      echo "synchronize development from desktop" | tee .data.dat .prev_data.dat > /dev/null
      (bash $COMMBASE_PROCESS_FILE) &> /dev/null
      ;;
    'set a timer of')
      cd $COMMBASE/commbase/data
      echo "set a timer of" "$2" "$3" | tee .data.dat .prev_data.dat > /dev/null && sleep 0.5
      (bash $COMMBASE_PROCESS_FILE) &> /dev/null
      ;;
    'open my current editor workspace' | 'open my current code workspace')
      cd $COMMBASE/commbase/data
      echo "open my current editor workspace" | tee .data.dat .prev_data.dat > /dev/null
      (bash $COMMBASE_PROCESS_FILE) &> /dev/null
      ;;
    *)
      total=4
      amixer set Capture nocap &>/dev/null
      reply=$((1 + $RANDOM % $total)) # Generates a random number between 1 and $total (inclusive)
      case $reply in 1) echo "no waaaay" | festival --tts ;; 2) echo "i can't do that" | festival --tts ;; 3) echo "repeat" | festival --tts ;; 4) echo "invalid choice" $USER | festival --tts ;; esac
      tmux select-window -t 1 && tmux select-pane -t 1 && echo "Commbase: ""I don't understand that command."
      tmux select-window -t 1 && tmux select-pane -t 4
      amixer set Capture cap &>/dev/null
      ;;
  esac
else
  echo "Session '$SESSIONNAME' does not exists. Usage: /usr/bin/commbase [start|stop]"
fi
